<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns:slack="http://www.mulesoft.org/schema/mule/slack" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:apikit="http://www.mulesoft.org/schema/mule/apikit" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:spring="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/apikit http://www.mulesoft.org/schema/mule/apikit/current/mule-apikit.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
http://www.mulesoft.org/schema/mule/slack http://www.mulesoft.org/schema/mule/slack/current/mule-slack.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd">
    <http:listener-config name="iot-slack-system-httpListenerConfig" host="0.0.0.0" port="8081" doc:name="HTTP Listener Configuration"/>
    <apikit:config name="iot-slack-system-config" raml="iot-slack-system.raml" consoleEnabled="false" doc:name="Router"/>
    <slack:token-config name="Slack__Token_Configuration" accessToken="${slackToken}" doc:name="Slack: Token Configuration"/>
    <flow name="iot-slack-system-main">
        <http:listener config-ref="iot-slack-system-httpListenerConfig" path="/api/*" doc:name="HTTP"/>
        <apikit:router config-ref="iot-slack-system-config" doc:name="APIkit Router"/>
        <exception-strategy ref="iot-slack-system-apiKitGlobalExceptionMapping" doc:name="Reference Exception Strategy"/>
    </flow>
    <flow name="iot-slack-system-console">
        <http:listener config-ref="iot-slack-system-httpListenerConfig" path="/console/*" doc:name="HTTP"/>
        <apikit:console config-ref="iot-slack-system-config" doc:name="APIkit Console"/>
    </flow>
    <flow name="post:/broadcast:application/json:iot-slack-system-config">
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
[{
	"fallback": "Notification system for request to try button",
	fields: [{
		short: true,
		title: "Name",
		value: payload.productName
	},
	{
		short: true,
		title: "Size",
		value: payload.productSize
	},
	{
		short: true,
		title: "Color",
		value: payload.productColor
	},
	{
		short: true,
		title: "Location",
		value: payload.location
	},
	{
		short: false,
		title: "Product Description",
		value: payload.productDesc
	}],
	"color": "#36a64f",
	"pretext": "Service requested!",
	"author_name": payload.user,
	"title": "Locate the following item:",
	"image_url": payload.imageUrl
}]]]></dw:set-payload>
        </dw:transform-message>
        <slack:post-message-with-attachment config-ref="Slack__Token_Configuration" channelId="CADCM5FGW" doc:name="Slack" iconURL="https://scontent-sjc3-1.xx.fbcdn.net/v/t1.0-1/c5.0.480.480/p480x480/25299332_1607235985986491_3562091198362846851_n.png?_nc_cat=0&amp;oh=d68abc37e1e05629f883b1405c39e617&amp;oe=5B5D9B22" username="Request To Try"/>
        <json:json-to-object-transformer doc:name="JSON to Object"/>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload]]></dw:set-payload>
        </dw:transform-message>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	status: "success" when (payload.ok == true) otherwise "failed"
}]]></dw:set-payload>
        </dw:transform-message>
    </flow>
    <apikit:mapping-exception-strategy name="iot-slack-system-apiKitGlobalExceptionMapping">
        <apikit:mapping statusCode="404">
            <apikit:exception value="org.mule.module.apikit.exception.NotFoundException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Resource not found&quot; }" doc:name="Set Payload"/>
        </apikit:mapping>
        <apikit:mapping statusCode="405">
            <apikit:exception value="org.mule.module.apikit.exception.MethodNotAllowedException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Method not allowed&quot; }" doc:name="Set Payload"/>
        </apikit:mapping>
        <apikit:mapping statusCode="415">
            <apikit:exception value="org.mule.module.apikit.exception.UnsupportedMediaTypeException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Unsupported media type&quot; }" doc:name="Set Payload"/>
        </apikit:mapping>
        <apikit:mapping statusCode="406">
            <apikit:exception value="org.mule.module.apikit.exception.NotAcceptableException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Not acceptable&quot; }" doc:name="Set Payload"/>
        </apikit:mapping>
        <apikit:mapping statusCode="400">
            <apikit:exception value="org.mule.module.apikit.exception.BadRequestException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Bad request&quot; }" doc:name="Set Payload"/>
        </apikit:mapping>
    </apikit:mapping-exception-strategy>
</mule>
